// Code generated by protoc-gen-go-gin. DO NOT EDIT.
// versions:
// - protoc-gen-go-gin v1.0.0
// - protoc             v3.20.1
// source: api/helloworld/v1/proto/greeter.proto

package v1

import (
	"context"
	"net/http"

	"github.com/mangohow/mangokit/serialize"
	"github.com/mangohow/mangokit/transport/httpwrapper"
)

// GreeterHTTPService The greeting service definition.
type GreeterHTTPService interface {
	// SayHello Sends a greeting
	SayHello(context.Context, *HelloRequest) (*HelloReply, error)
	GetError(context.Context, *GetErrorRequest) error
	AddUser(context.Context, *AddUserRequest) error
}

func RegisterGreeterHTTPService(server *httpwrapper.Server, svc GreeterHTTPService) {
	server.GET("/helloworld/:name", _Greeter_SayHello_HTTP_Handler(svc))
	server.GET("/error", _Greeter_GetError_HTTP_Handler(svc))
	server.POST("/user", _Greeter_AddUser_HTTP_Handler(svc))
}

func _Greeter_SayHello_HTTP_Handler(svc GreeterHTTPService) httpwrapper.HandlerFunc {
	return func(ctx *httpwrapper.Context) error {
		in := new(HelloRequest)
		if err := ctx.BindRequest(in); err != nil {
			return err
		}
		value := context.WithValue(context.Background(), "gin-ctx", ctx)
		reply, err := svc.SayHello(value, in)
		if err != nil {
			return err
		}
		ctx.JSON(http.StatusOK, serialize.Response{Data: reply})

		return nil
	}
}

func _Greeter_GetError_HTTP_Handler(svc GreeterHTTPService) httpwrapper.HandlerFunc {
	return func(ctx *httpwrapper.Context) error {
		in := new(GetErrorRequest)
		if err := ctx.BindRequest(in); err != nil {
			return err
		}
		value := context.WithValue(context.Background(), "gin-ctx", ctx)
		err := svc.GetError(value, in)
		if err != nil {
			return err
		}
		ctx.Status(http.StatusOK)

		return nil
	}
}

func _Greeter_AddUser_HTTP_Handler(svc GreeterHTTPService) httpwrapper.HandlerFunc {
	return func(ctx *httpwrapper.Context) error {
		in := new(AddUserRequest)
		if err := ctx.BindRequest(in); err != nil {
			return err
		}
		value := context.WithValue(context.Background(), "gin-ctx", ctx)
		err := svc.AddUser(value, in)
		if err != nil {
			return err
		}
		ctx.Status(http.StatusOK)

		return nil
	}
}
